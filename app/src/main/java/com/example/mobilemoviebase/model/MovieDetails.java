/*
 * MobileMovieBase
 * This is the MobileMovieBase server.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hargitomi97@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.mobilemoviebase.model;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;
import androidx.room.TypeConverters;

import com.example.mobilemoviebase.network.OneOfinlineResponse200;
import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * MovieWithDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-23T14:07:28.797Z[GMT]")
@Entity(tableName = "movieDetails")
public class MovieDetails implements OneOfinlineResponse200 {

  @PrimaryKey(autoGenerate = true)
  @ColumnInfo(name = "id")
  private int id;

  @SerializedName("Title")
  @ColumnInfo(name = "title")
  private String title = null;

  @SerializedName("Year")
  @ColumnInfo(name = "year")
  private String year = null;

  @SerializedName("Rated")
  @ColumnInfo(name = "rated")
  private String rated = null;

  @SerializedName("Released")
  @ColumnInfo(name = "released")
  private String released = null;

  @SerializedName("Runtime")
  @ColumnInfo(name = "runtime")
  private String runtime = null;

  @SerializedName("Genre")
  @ColumnInfo(name = "genre")
  private String genre = null;

  @SerializedName("Director")
  @ColumnInfo(name = "director")
  private String director = null;

  @SerializedName("Writer")
  @ColumnInfo(name = "writer")
  private String writer = null;

  @SerializedName("Actors")
  @ColumnInfo(name = "actors")
  private String actors = null;

  @SerializedName("Plot")
  @ColumnInfo(name = "plot")
  private String plot = null;

  @SerializedName("Language")
  @ColumnInfo(name = "language")
  private String language = null;

  @SerializedName("Country")
  @ColumnInfo(name = "country")
  private String country = null;

  @SerializedName("Awards")
  @ColumnInfo(name = "awards")
  private String awards = null;

  @SerializedName("Poster")
  @ColumnInfo(name = "poster")
  private String poster = null;

  @Ignore
  @SerializedName("Ratings")
  @ColumnInfo(name = "ratings")
  private List<MovieDetailsRatings> ratings = null;

  @SerializedName("Metascore")
  @ColumnInfo(name = "metascore")
  private String metascore = null;

  @SerializedName("imdbRating")
  @ColumnInfo(name = "imdbrating")
  private String imdbRating = null;

  @SerializedName("imdbVotes")
  @ColumnInfo(name = "imdbvotes")
  private String imdbVotes = null;

  @SerializedName("imdbID")
  @ColumnInfo(name = "imdbid")
  private String imdbID = null;

  @SerializedName("Type")
  @ColumnInfo(name = "type")
  private String type = null;

  @SerializedName("DVD")
  @ColumnInfo(name = "dvd")
  private String DVD = null;

  @SerializedName("BoxOffice")
  @ColumnInfo(name = "boxoffice")
  private String boxOffice = null;

  @SerializedName("Production")
  @ColumnInfo(name = "production")
  private String production = null;

  @SerializedName("Website")
  @ColumnInfo(name = "website")
  private String website = null;

  @SerializedName("Response")
  @ColumnInfo(name = "response")
  private Boolean response = null;

  public MovieDetails title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public MovieDetails year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }

  public MovieDetails rated(String rated) {
    this.rated = rated;
    return this;
  }

   /**
   * Get rated
   * @return rated
  **/
  public String getRated() {
    return rated;
  }

  public void setRated(String rated) {
    this.rated = rated;
  }

  public MovieDetails released(String released) {
    this.released = released;
    return this;
  }

  public List<MovieDetailsRatings> getRatings() {
    return ratings;
  }

  public void setRatings(List<MovieDetailsRatings> ratings) {
    this.ratings = ratings;
  }

   /**
   * Get released
   * @return released
  **/
  public String getReleased() {
    return released;
  }

  public void setReleased(String released) {
    this.released = released;
  }

  public MovieDetails runtime(String runtime) {
    this.runtime = runtime;
    return this;
  }

   /**
   * Get runtime
   * @return runtime
  **/
  public String getRuntime() {
    return runtime;
  }

  public void setRuntime(String runtime) {
    this.runtime = runtime;
  }

  public MovieDetails genre(String genre) {
    this.genre = genre;
    return this;
  }

   /**
   * Get genre
   * @return genre
  **/
  public String getGenre() {
    return genre;
  }

  public void setGenre(String genre) {
    this.genre = genre;
  }

  public MovieDetails director(String director) {
    this.director = director;
    return this;
  }

   /**
   * Get director
   * @return director
  **/
  public String getDirector() {
    return director;
  }

  public void setDirector(String director) {
    this.director = director;
  }

  public MovieDetails writer(String writer) {
    this.writer = writer;
    return this;
  }

   /**
   * Get writer
   * @return writer
  **/
  public String getWriter() {
    return writer;
  }

  public void setWriter(String writer) {
    this.writer = writer;
  }

  public MovieDetails actors(String actors) {
    this.actors = actors;
    return this;
  }

   /**
   * Get actors
   * @return actors
  **/
  public String getActors() {
    return actors;
  }

  public void setActors(String actors) {
    this.actors = actors;
  }

  public MovieDetails plot(String plot) {
    this.plot = plot;
    return this;
  }

   /**
   * Get plot
   * @return plot
  **/
  public String getPlot() {
    return plot;
  }

  public void setPlot(String plot) {
    this.plot = plot;
  }

  public MovieDetails language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public MovieDetails country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public MovieDetails awards(String awards) {
    this.awards = awards;
    return this;
  }

   /**
   * Get awards
   * @return awards
  **/
  public String getAwards() {
    return awards;
  }

  public void setAwards(String awards) {
    this.awards = awards;
  }

  public MovieDetails poster(String poster) {
    this.poster = poster;
    return this;
  }

   /**
   * Get poster
   * @return poster
  **/
  public String getPoster() {
    return poster;
  }

  public void setPoster(String poster) {
    this.poster = poster;
  }

  public MovieDetails metascore(String metascore) {
    this.metascore = metascore;
    return this;
  }

   /**
   * Get metascore
   * @return metascore
  **/
  public String getMetascore() {
    return metascore;
  }

  public void setMetascore(String metascore) {
    this.metascore = metascore;
  }

  public MovieDetails imdbID(String imdbID) {
    this.imdbID = imdbID;
    return this;
  }

   /**
   * Get imdbID
   * @return imdbID
  **/
  public String getImdbID() {
    return imdbID;
  }

  public void setImdbID(String imdbID) {
    this.imdbID = imdbID;
  }

  public MovieDetails type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public MovieDetails DVD(String DVD) {
    this.DVD = DVD;
    return this;
  }

   /**
   * Get DVD
   * @return DVD
  **/
  public String getDVD() {
    return DVD;
  }

  public void setDVD(String DVD) {
    this.DVD = DVD;
  }

  public MovieDetails boxOffice(String boxOffice) {
    this.boxOffice = boxOffice;
    return this;
  }

   /**
   * Get boxOffice
   * @return boxOffice
  **/
  public String getBoxOffice() {
    return boxOffice;
  }

  public void setBoxOffice(String boxOffice) {
    this.boxOffice = boxOffice;
  }

  public MovieDetails production(String production) {
    this.production = production;
    return this;
  }

   /**
   * Get production
   * @return production
  **/
  public String getProduction() {
    return production;
  }

  public void setProduction(String production) {
    this.production = production;
  }

  public MovieDetails website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Get website
   * @return website
  **/
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public MovieDetails response(Boolean response) {
    this.response = response;
    return this;
  }

   /**
   * Get response
   * @return response
  **/
  public Boolean isResponse() {
    return response;
  }

  public void setResponse(Boolean response) {
    this.response = response;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MovieDetails movieDetails = (MovieDetails) o;
    return Objects.equals(this.title, movieDetails.title) &&
        Objects.equals(this.year, movieDetails.year) &&
        Objects.equals(this.rated, movieDetails.rated) &&
        Objects.equals(this.released, movieDetails.released) &&
        Objects.equals(this.runtime, movieDetails.runtime) &&
        Objects.equals(this.genre, movieDetails.genre) &&
        Objects.equals(this.director, movieDetails.director) &&
        Objects.equals(this.writer, movieDetails.writer) &&
        Objects.equals(this.actors, movieDetails.actors) &&
        Objects.equals(this.plot, movieDetails.plot) &&
        Objects.equals(this.language, movieDetails.language) &&
        Objects.equals(this.country, movieDetails.country) &&
        Objects.equals(this.awards, movieDetails.awards) &&
        Objects.equals(this.poster, movieDetails.poster) &&
       // Objects.equals(this.ratings, movieDetails.ratings) &&
        Objects.equals(this.metascore, movieDetails.metascore) &&
        Objects.equals(this.imdbRating, movieDetails.imdbRating) &&
        Objects.equals(this.imdbVotes, movieDetails.imdbVotes) &&
        Objects.equals(this.imdbID, movieDetails.imdbID) &&
        Objects.equals(this.type, movieDetails.type) &&
        Objects.equals(this.DVD, movieDetails.DVD) &&
        Objects.equals(this.boxOffice, movieDetails.boxOffice) &&
        Objects.equals(this.production, movieDetails.production) &&
        Objects.equals(this.website, movieDetails.website) &&
        Objects.equals(this.response, movieDetails.response);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, year, rated, released, runtime, genre, director, writer, actors, plot, language, country, awards, poster, //ratings,
            metascore, imdbRating, imdbVotes, imdbID, type, DVD, boxOffice, production, website, response);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MovieWithDetails {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    rated: ").append(toIndentedString(rated)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    director: ").append(toIndentedString(director)).append("\n");
    sb.append("    writer: ").append(toIndentedString(writer)).append("\n");
    sb.append("    actors: ").append(toIndentedString(actors)).append("\n");
    sb.append("    plot: ").append(toIndentedString(plot)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    awards: ").append(toIndentedString(awards)).append("\n");
    sb.append("    poster: ").append(toIndentedString(poster)).append("\n");
    //sb.append("    ratings: ").append(toIndentedString(ratings)).append("\n");
    sb.append("    metascore: ").append(toIndentedString(metascore)).append("\n");
    sb.append("    imdbRating: ").append(toIndentedString(imdbRating)).append("\n");
    sb.append("    imdbVotes: ").append(toIndentedString(imdbVotes)).append("\n");
    sb.append("    imdbID: ").append(toIndentedString(imdbID)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    DVD: ").append(toIndentedString(DVD)).append("\n");
    sb.append("    boxOffice: ").append(toIndentedString(boxOffice)).append("\n");
    sb.append("    production: ").append(toIndentedString(production)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public int getId() {
    return id;
  }

  public void setId(int id) {
    this.id = id;
  }

  public String getImdbRating(){
    return imdbRating;
  }

  public void setImdbRating(String imdbRating) {
    this.imdbRating = imdbRating;
  }

  public String getImdbVotes(){
    return imdbVotes;
  }

  public void setImdbVotes(String imdbVotes) {
    this.imdbVotes = imdbVotes;
  }

}
