/*
 * MobileMovieBase
 * This is the MobileMovieBase server.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hargitomi97@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.mobilemoviebase.model;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * Movie
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-23T14:07:28.797Z[GMT]")
@Entity(tableName = "movies")
public class Movie {

  @PrimaryKey(autoGenerate = true)
  @ColumnInfo(name = "id")
  private int id;

  @SerializedName("Title")
  @ColumnInfo(name = "title")
  private String title = null;

  @SerializedName("Year")
  @ColumnInfo(name = "year")
  private String year = null;

  @SerializedName("imdbID")
  @ColumnInfo(name = "imdbID")
  private String imdbID = null;

  @SerializedName("Type")
  @ColumnInfo(name = "type")
  private String type = null;

  @SerializedName("Poster")
  @ColumnInfo(name = "poster")
  private String poster = null;


  public int getId(){
    return id;
  }

  public void setId(int id) {
    this.id = id;
  }

  public Movie title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Movie year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }

  public Movie imdbID(String imdbID) {
    this.imdbID = imdbID;
    return this;
  }

   /**
   * Get imdbID
   * @return imdbID
  **/
  public String getImdbID() {
    return imdbID;
  }

  public void setImdbID(String imdbID) {
    this.imdbID = imdbID;
  }

  public Movie type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Movie poster(String poster) {
    this.poster = poster;
    return this;
  }

   /**
   * Get poster
   * @return poster
  **/
  public String getPoster() {
    return poster;
  }

  public void setPoster(String poster) {
    this.poster = poster;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Movie movie = (Movie) o;
    return Objects.equals(this.title, movie.title) &&
        Objects.equals(this.year, movie.year) &&
        Objects.equals(this.imdbID, movie.imdbID) &&
        Objects.equals(this.type, movie.type) &&
        Objects.equals(this.poster, movie.poster);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, year, imdbID, type, poster);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MovieSearch {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    imdbID: ").append(toIndentedString(imdbID)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    poster: ").append(toIndentedString(poster)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
